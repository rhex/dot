#set -g prefix ^a
#unbind ^b
#bind a send-prefix

set-option -g prefix2 ^q
# use mouse to resize the panel
set-option -g mouse on

bind r source-file ~/.tmux.conf \; display "Reloaded!"

# double input C-a will send the this to the program
# bind C-a send-prefix

# Highlight active window
set-window-option -g window-status-current-bg blue
# Set status bar
set -g status-bg black
set -g status-fg white

# Automatically set window title
setw -g automatic-rename on

set -g renumber-windows on  # renumber windows when a window is closed

# set the index
set -g base-index 1
setw -g pane-base-index 1

set -g set-titles on
# set -g set-titles-string '#h ❐ #S ● #I #W'

unbind '"'
bind - splitw -v
unbind %
bind | splitw -h

bind k selectp -U
bind j selectp -D
bind h selectp -L
bind l selectp -R

# use -r will repeat the original operation by the last word
bind -r ^k resizep -U 10
bind -r ^j resizep -D 10
bind -r ^h resizep -L 10
bind -r ^l resizep -R 10

bind ^u swapp -U
bind ^d swapp -D

setw -g mode-keys vi

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# bind-key syntax changed in 2.4
# if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \

if-shell 'expr $TMUX_VERSION "<" 2.4' \
  "display begin2.1; \
   bind-key -t vi-copy v   begin-selection; \
   bind-key -t vi-copy V   select-line; \
   bind-key -t vi-copy C-v rectangle-toggle; \
   bind-key -t vi-copy y   copy-pipe 'xclip -selection clipboard -in'; \
   display 2.1"

# Newer versions
# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \

if-shell 'expr $TMUX_VERSION ">" 2.4' \
  "# Selection / copy / paste \
   bind-key -T copy-mode-vi v   send -X begin-selection  # default is <space> \
   bind-key -T copy-mode-vi V   send -X select-line \
   bind-key -T copy-mode-vi C-v send -X rectangle-toggle  # default is C-v, or R in copy-mode (non-vi) \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"
# bind -t vi-copy v begin-selection
# bind -t vi-copy y copy-selection
# bind -t vi-copy C-v rectangle-toggle


#if-shell "" \

#if-shell "uname | grep -q Darwin" \
#  "display xxxx"

# for tmux2.6
if-shell "uname | grep -q Darwin" \
  "display mac; \
  bind-key -T copy-mode-vi 'v' send-keys -X begin-selection; \
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'; \
  bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle; \
  display macOK;"

#bind C-c run " tmux save-buffer - | xclip -i -sel clipboard > /dev/null 2>&1"
#bind C-v run " tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer > /dev/null 2>&1"
#bind C-c run-shell -b "tmux save-buffer - | xclip -selection clipboard; tmux display-message \"Tmux buffer saved to clipboard\""
# bind C-c run "tmux save-buffer - | nohup >/dev/null 2>/dev/null xclip -i -sel clipboard"
#bind y run "tmux save-buffer - | xclip -selection clipboard &>/dev/null"
#bind C-c run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"
#bind C-c run "tmux save-buffer - | xsel -ib"
#bind C-v run "tmux set-buffer \"$(xsel -ob)\"; tmux paste-buffer"

# notisfy
setw -g monitor-activity on
set -g visual-activity on

# set the status bar
#set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P"

# set -g default-terminal "screen-256color"

# set-option -g default-command "reattach-to-user-namespace -l bash"

# Mac
#unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter copy-pipe "reattach-to-user-namespace pbcopy"

# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# set -g default-shell $SHELL
#
# # Override the default command to use `reattach-to-user-namespace` for everything.
# set -g default-command "reattach-to-user-namespace -l ${SHELL}"
#
# # Vim style navigation in copy mode
#
# # Setup 'v' to begin selection, just like Vim
# bind-key -t vi-copy v begin-selection
#
# # Setup 'y' to yank (copy), just like Vim
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#
# # Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#
# # Bind ']' to use pbbaste
# bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# set for tmux-open
set -g @open-B 'https://www.bing.com/search?q='
set -g @open-S 'https://www.google.com/search?q='

# set for tmux-copycat
#set -g @copycat_search "/"
